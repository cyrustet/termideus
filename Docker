# syntax=docker/dockerfile:1

# --- Builder stage ---
FROM rust:1.72-slim AS builder

# Create app directory
WORKDIR /app

# Cache dependencies by copying manifest files first
COPY Cargo.toml Cargo.lock ./

# Create dummy src to allow dependency resolution
RUN mkdir src && echo "fn main() { println!(\"dummy\"); }" > src/main.rs

# Build dependencies only
RUN cargo build --release

# Now copy the full source
COPY . .

# Build the actual binary
RUN rm -rf src && cargo build --release

# --- Runtime stage ---
FROM debian:bullseye-slim

# Install only ca-certificates for HTTPS
RUN apt-get update \
    && apt-get install -y --no-install-recommends ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy the compiled binary from the builder
COPY --from=builder /app/target/release/termideus /usr/local/bin/termideus

# Expose the port your Actix-web app listens on
EXPOSE 8080

# Run the application
CMD ["termideus"]
